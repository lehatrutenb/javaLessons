spring:
  application:
    name: kpo-app
  datasource:
    url: jdbc:postgresql://postgres_training_center:5432/training_center_db
    username: postgres
    password: postgres
#    url: ${SPRING_DATASOURCE_URL}
#    username: ${SPRING_DATASOURCE_USERNAME}
#    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update # use update for defining themes from java, none for versioning by hands , create for rming columns/.../...
#      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  #liquibase:
    #enabled: true
    #change-log: classpath:db/changelog/db.changelog-master.yaml
  kafka:
    bootstrap-servers: kafka:9092
    properties:
      security.protocol: PLAINTEXT
    #      socket.connection.setup.timeout.ms: 30000
    admin:
      auto-create-topics: true
    consumer:
      group-id: kpoTrainingCenter
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "hse.kpo,java.util,java.lang,hse.kpo.kafka" # list of trusted classes to serialize/deserialize
        # Debug logging properties
        logging.level.root: INFO
        logging.level.org.apache.kafka: DEBUG
        logging.level.org.springframework.kafka: DEBUG
        # Additional debug properties
        debug: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
  port: 8080

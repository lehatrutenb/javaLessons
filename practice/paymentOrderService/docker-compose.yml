services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_payment_order_service_db
    environment:
      POSTGRES_DB: order_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - data_postgres_payment_order_service_db:/var/lib/postgresql/data
    ports:
      - "5501:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: orderServiceApp
    ports:
      - "8081:8080" # server
      - "7071:7070" # grpc
    networks:
      - shared-net
      - default
    environment:
      GRPC_LISTENING_PORT: 7070
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_payment_order_service_db:5432/order_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      HTTP_LISTENING_PORT: 8080
      SPRING_MESSAGE_BROKER_HOST: kafkaContainer:29092
    depends_on:
      postgres:
        condition: service_healthy
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper/data
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - shared-net
  kafka:
    image: bitnami/kafka:3.3
    container_name: kafkaContainer
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://localhost:9092,EXTERNAL://kafkaContainer:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL # ??????????????????????????????????
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - shared-net
      - default
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "4040:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkaContainer:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
    networks:
      - shared-net
      - default

volumes:
  data_postgres_payment_order_service_db:
  zookeeper_data:

networks:
  shared-net:
    name: shared-net
    driver: bridge